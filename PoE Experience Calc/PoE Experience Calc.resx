<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAOABAADgAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAACAgIHCAgMDAwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwM
        DQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwMDQwLDAwHCAgBAgEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBgYjJiVFSUhWWlhYXFpYXFpYXFpYXFpYXFpYXFpY
        XFpYXFpYXFpYXFpYXFpYXFpYXFtYXFtZXVtZXVtZXVtZXVtaXVxaXlxaXlxaXlxaXlxaXlxaXlxaXlxa
        XlxaXlxaXl1bXl1aXVtIS0okJSUGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIjJSRlaWeU
        mZagpaOhpqSipqSipqSipqSip6Wjp6akqKakqaakqaelqaelqqilq6mmq6mnrKmnrKqorauorauoraup
        rquqrqyqr62rsK2rsK6ssK6ssK+tsbCtsrCusrCus7GvtLKvtLGgpKJqbmwjJSQCAgIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAJCQlFSEaUmJakqKWSlpOPk5CSl5ScoZ+ip6WfpKKYnZuXnJqYnZqan52iqKWm
        rKqjqqecop+boZ6boZ+epKKnraursq+orqyhp6SgpaOgpqOjqKassq+wtrSts7Glq6mkqqelqqilq6io
        r6y4vryhpqNHSUcJCQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODw5TVlSbnpxwcW1KS0ZKSkVLTEdq
        bGiRlpR6f31rb21ucnBuc3FscG58gX+XnZp9gn9scG5uc3Fvc3FtcW9/hIKcoqB/hIJobWtobWtobWtp
        bmuBh4Shp6SCh4RqbmxpbWtpbmxpbmxqbmyKj42rsK5WWVcODw4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAPDw9VWFaQk5BTU09ISkZOUU5HSUVMTUh/hIFtcnCMko+fpaKfpqOMkpBscW+GjIltcW+Ok5Ckqqem
        rKmMkY9vc3GLkI5rb213fHp9goB8gH5yd3Vqb2yPlZJrcG5ydnR8gX98gH58gX9xdnRwdXOhpaNYW1kP
        Dw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9UWFaMj41XV1JfYl9dYWBRVFFLS0d6fntzd3Worau1
        u7iyuLaepKFucnCBhoNxdnOssa7KzszJzsyepKJxdXOGi4lvc3GSlpSRlpSLkI5+g4FqbmyKkI1scG58
        gX+GjImGi4mGi4l7gH5wdXOeoqBXW1kODw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9UV1aOkY9Z
        WVRlZmNrbmtXWFVOTkl+gn9wdXOcn56ssK6lqqiOk5FscG6Eiodvc3GdoZ+xtbOrsK6NkpBuc3GJj4xv
        dHKQk5KanZyQlJN8gH5rb22LkY5tcW9/hIKHjIqFioiGi4l7gH5wdXOdoqBXW1kPDw8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAPDw9UV1WYm5pucGxTU05VVlFTU05pa2eOk5B5fnxwdHJ1eXdzeHZuc3F6gH6U
        mZd8gX9xdnR1enh0eHdvdHJ9g4GZnpx/hIFwdXN0eHZydnRucnCBhoOSmJZucnCFiYeIjYuFioiGi4l7
        gH5wdHKdoZ9XWlkPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9TVlScoJ+Ok5B2eXVydXF3e3eL
        kI2Vm5mPlJKBhoR+g4F+g4GDiIaTmJaaoJ6UmZeEioeBh4SCh4WGjIqXnZufpaOYnpyJjoyFioiGi4mL
        kI2do6GVm5lvc3GKjoyJjoyFioiGi4l7gH5wdHKdoZ9XWlkPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAPDw9UV1WXm5lsbmpLS0ZKS0ZMTEdnaWWMkY94fXprb21uc3Buc3FscG56f3ySmJV6f31scG5uc3Fv
        c3FscW98gn+XnZp9goBtcm9vdHJwdXJucnCAhYORlpRwdXKPk5GLj42FioiHjIp/g4FxdXOcoZ5XWlkP
        Dw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9UV1WNj41SUk5JSkZOUU5HSUZLS0Z7f31scW6Mko+g
        p6SkqqeNk5BrcG2CiIVscG6Ok5GlqqimrKqMkY9tcnCGjIltcm+Mko+jqaamrKmMko9tcnCIjYtydnSU
        mJaLkI6FioiIjYuEiIZydnScoJ5XWlkPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9UV1WJjIpW
        VlFfYl9dYWBRVFFKSkZ2endydnSorarAxcPEycefpaNtcW99goBwdHKrr63Gy8nIzcueo6FvdHKBh4Ry
        dnSoravFycjIzcuepKFuc3GFiohzd3abnp2TmJaMkY+Pk5GKjo10d3abn51XWlkPDw8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAPDw9UV1WLjotYWFNlZmNrbmtXWVVNTUh5fXtvc3GcoJ6vtLKqr62OlJJqb22A
        hoNucnCdoZ+xtbOrsK6NkpBtcW+EiohwdHKbn56xtbOssK6OkpBtcm+IjotwdHORlJOcn56WmpiTl5WD
        h4Vzd3WdoZ9WWVgPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9TVlWUmJZsbWlSUk5UVVBSUk1m
        aGSIjYt2enhvc3FzeHZyd3Vtcm93fHqOk5F4fXtwdHJ0eXdzd3VucnB6f32TmZZ7gX5xdXN1enh0eHZv
        dHJ9goCYnpt+g4FwdHN0eHZzd3VxdnNucnGFioilqqdVWVcPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAPDw9SVVSZnJuJjYtxdHFucW1zdnOFioePlZOJj419goB6f316f31+hIGNk5CUmpiOlJKAhYN9goB+
        g4GCiIWRl5Wan52TmZaEiYeBhoSBh4SGi4mWnJqfpaOYnpuJjoyFioiGi4mGjImKkI2hp6WprqxVWVcP
        Dw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9TVlSTl5Vpa2dKSkVJSkVKS0ZkZmKHjIl0eXdpbmxs
        cW9tcnBqb212e3mNkpB3fHprb21tcnBuc3BrcG55fnySl5V6f3xrcG5uc3Fvc3FtcW98gX+WnJl8gX9o
        bWtpbWtpbWtpbWtpbWuEiYekqaZVWVcPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9TVlWJjYpS
        UU1JSkdOUU5HSUZKSkV3e3hrb22NkpCkqqemrKmOk5Fpbmx+g4Fqb22Ok5GjqaamrKmMko9scW6Ch4Vs
        cG6NkpClqqimrKqMko9scW6Gi4lqb214fHp+g4F8gX98gX9ydnRvc3Gan51WWVgPDw8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAPDw9TVlSHiYdVVVFfYl9dYWBRVFFJSUVydnNxdXOprqzHzMrKzsygpqRrcG55
        fnxvc3GrsK3IzcrJzsyepKJuc3F9goBxdXOpr63M0c/IzcuepKJtcnCBhoRvdHKTl5WTl5aNkpCNkpCD
        iIZwdXOYnJpWWVgPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9TVlSIi4lXV1JlZmNrbmtXWVVM
        TEd1eXZucnCcoJ6wtLKrsK6PlJJpbWx8gX9scW+doZ+ytrSssa+Nk5FrcG6AhoNvc3GcoJ6ytrSrsK6O
        k5BscG6EiYdvc3GQlJKdoJ+ZnJuWmpmFiYdydnSanpxVWVcPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAPDw9SVVSRlJJoamdRUUxTU09QUExjZWGCiIVzd3VtcnByd3VxdnRscG50eXeJjox1enhvc3Fzd3Vy
        dnVtcW93fHqOk5B4fXtvdHJ0eHZzd3VucnB6f3ySmJZ7gH1vc3Fzd3Vzd3VydnRuc3GDh4WhpqRVWVcP
        Dw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9SVVSVmZeEiIZtcG1qbWlvcm6AhIKJjoyEiYd4fXt2
        e3l2e3l6f32IjYuOlJKJjox8gX95fnx6f31+g4GMko+TmZaOk5GAhYN9goB9g4CCh4WRl5SZn5ySmJWE
        iYeBhoSCh4WCh4WGi4mcoqClqahUWFYPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9SVVSRlJJn
        aGRISURISURJSkVhY1+ChoRxdnRobWtrcG5scW9qbmxzeHaHjIp0eXZpbmxscW9tcnBqb212e3mMkY93
        fHlqb21tcnBucnBrcG55fnyRlpR5fnxna2lobGpobGpobGpobGqBhoSgpaNUWFYPDw8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAPDw9TVlSIi4hRUUxJSkdOUU5HSUZJSURzdnRqbmyNkpChqKWiqKaNk5BobWt6
        f3xpbmuOk5GkqqimrKqMko9rb21+goBrb22Nko+kqqemrKmMko9rb22Ch4Vpbmx4fHt+g4F8gX98gX9y
        dnRucnCYnJpUWFYPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9TVlSFiIVVVVBfYl9dYWBRVFFI
        SERucm9wdHKprqvDyMbDx8WfpaJrb211enhucnCrsK7Lz83Lz82epKFtcnB5fnxwdHKprqzLz83Lz86f
        pKJscW99goBucnCTl5WTl5aNkpCNkpCDiIZwdHKVmZdUWFYPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAPDw9TVlSIi4hXV1JlZmNrbmtXWVVLS0ZxdXJscW+coJ6xtbSssa+PlZNobGp4fXtrb22doZ+ytrSs
        sK+Ok5Fqb218gX9tcnCcoJ+ytrWssK6Ok5Frb22AhYNucnCQlJKdoJ+ZnJuWmpmFiYdxdXOWm5lUWFYP
        Dw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9SVVSRlJJoaWZQUExSUk5PUEthYl5/g4FwdXNscG5x
        dXNvdHJqb21xdnSDiIZyd3VtcnBydnRwdXNrcG50eXaIjot1enducnBzd3VxdnRscW93fHmNk5B3fHpt
        cXBxdXNxdXNxdXNscW+AhIKeo6FUWFYPDw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw9SVVSWmpiJ
        jYt5fHp3enh5fXqCh4SGi4mDiIZ9goB7gH58gX9+g4GFi4iJjoyGjIqBhoSAhYOAhoSDiIaKkI2OlJGM
        kY+FioiEiYeFioiHjYuPlZKTmZeRlpSKj42JjoyJj42Kj42MkY+boZ6jp6VUV1UPDw8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAANDQ1ISkaFiIV+goB4e3l4enl4enl4eXh4eXh4eXh4enh4enh4enh5enl5e3l5
        e3l6fHp7fXx8fnx9fn19f319f35+f35/gH+AgoCAgoGBg4GCg4KChIKChIKDhYOEhoSFh4WFh4aGiIaG
        iYeMkI6OkY9KS0gNDQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCwo0My5RUEtKSkZGU0hGY1BGZVFG
        ZVFGZVFGZVFGZVFGZVFGZVFGZVFGZVJGZVJGZVJGZlJGZlJHZlJHZlJHZlNHZlNHZlNHZlNHZlNHZlNI
        ZlNIZ1NIZ1RIZ1RIZ1RIZ1RIaFRIZ1NJV0tMTEhPTkk0Mi4MCwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAMCwoxMCtEQT08ST01lmI0w3k0w3o0w3o0w3ozxHkzw3kzw3kzw3kzw3kyw3kyw3kyw3kyw3kyw3ky
        w3kyw3kyw3kyw3kyw3kyw3kyw3kyw3kyw3kyw3kyw3kzw3kzw3k0w3ozw3kzw3k1lmI7Rzw/PDgwLyoM
        CwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCwoyMSxHRUE+W0g0xHoz5ow05Is05Is24otD45JJ55dJ
        55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dJ55dK55hF55U3
        5I0z5Io25IxA6JRMyYlEXExDQDwxMCsMCwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCwozMi1KSERE
        YE5Bx4M55Y404ooz4oo/24x52qmY78OY8MSY8MOY8MOY8MOY8MOY8MOY8MOY8MOY8MOY8MOY8MOY8MOY
        8MOY8MOY8MOY8MOY8MOY8MOZ8MSH7rpO5plJ5ZZe6KJz7rB00KFNYVNFQz8yMCwMCwoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAMCwozMi5MS0dPZFZsz5xn66hT5pxD5ZJH2pCK2bGw8tCw89Gv89Gv89Gv89Gv
        89Gv89Gv89Gv89Gv89Gv89Gv89Gv89Gv89Gv89Gw89Gw89Gy89K19NS79diw9NGA7bV77bOD7riH8Lt5
        0aRPY1ZIRkIzMS0MCwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCwo0My5PTkpRZlhyz6B97rV57LJx
        661w4qif4L+489a19NWz9NOy9NKx9NGw89Gw89Gv89Gv89Gw89Gw89Gx9NKy9NKz9NO29NS59da+9tnD
        9tzI99/M+OLA9tqQ77+C7reD7reD77l30KNRZVhKSUUzMi4MCwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAKCgk0My9SUU1QaFllzplu7Kxu6qtu66t55K6r48fF9NzD9tzB9du/9dq+9dm99di89Ni89Ni89Ni9
        9Ni+9dm/9dnB9drD9dvF9t3G9t7I9t/I9t/I9t/K9uC69NeF7bh27LB37LF47rJuz55QZ1lNTEkzMS0L
        CgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCQg0Mi5VU1BOaVlazZJf6qRf6KNf6KNo4qWQ2LSi38Ci
        4MGi4MGj4MGj4MGj4MGj4MGj4MGk4MGk4MKk4MKk4MKk4MKl4MKl4MKl4MKl4cKl4cOl4cKm4cOb4r5z
        6Kxn6qho6ahp7KlizpdPaVlQT0wyMSwKCQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCQg0My9YVlRO
        aVlNyopQ6pxQ6JtQ6JtS55xY451a4p1b4p1b4p5b4p5c4p5c4p5c4p5c4p9d4p9d459d459e459e46Bf
        46Bf46Bf46Bf46Bg46Fg46Fg46Ff5KFa6KBZ6qBZ6qBZ66JWzI9OaFlTUk8zMi0KCQgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAKCQg0NC9bWldOXFNGoHFEyYVEyYVEyYVEyYVEyYVEyYVFyYVFyYZFyYZFyYZG
        yYdGyYdHyYdHyYdHyodIyodIyodIyohJyohJyohJyohJyolKyolKyolKyolLyolLyolMyolMyopNyopL
        oXVOXFNWVlM0My4KCQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCQg1NDBdXltQU1BIWE5JZ1dUdGJU
        c2JXdmVScWBWdWRUc2JXdWRVdGNYdmVMa1pIZ1ZIZ1ZJZ1ZJZ1ZJZ1ZJZ1ZJZ1ZJZ1ZJZ1ZJZ1ZJaFhJ
        a11IbF5IbF5IbF5IbF5IbF5JbF9Jal1JWVBPUk9YWlc0My8KCQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAKCQg2NTFgYV5SVVJKTElcXVuLjIuGh4acnJuYmJeMjIyLi4ucnZyampqgoKBjY2FKS0lMTUtMTUtM
        TUtMTUtMTUtMTUtMTUtMTUtMTUpLUVJIYXBHZnhHZXdHZXdHZXdHZXdHZXhIYXBLUVFRVFBbXVo1NDAK
        CQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQg1NDBhY2BVWFVMT0xdYF6JjImEh4WZm5qWmZeJjIqJ
        jIqYm5mQk5GbnZxgY2BMT0xNUE1NUE1NUE1NUE1NUE1NUE1NUE1NUE1NUE1NVFVKY3FJaHlJZ3lJZ3lJ
        Z3lJZ3hJaHlKZHJMU1RUVlReX1w1My8JCQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBgUtLChdXlth
        ZGJWWVdXWlhkZ2VjZmRmaWdhZGJlaGZjZmRmaGdiZWNlaGZYW1lWWFdWWFdWWFdWWFdWWFdWWFdWWFdW
        WFdWWFdWWFdWWVhVXV5VXWBUXV9UXV9UXV9UXV9UXV9UXV5VWlhfYmBbXFksKygGBgUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAABAQEWFhRBQD1dX1xjZWNjZWNiZGJiZGFiZGFiZGFiZGFiZGFiZGFiZGJiZGJj
        ZWNjZWNjZWNjZWNjZWNjZWNjZWNjZWNjZWNjZWNjZWNjZWNjZWJjZWJjZWJjZWJjZWJjZWJjZWJjZWJj
        ZWJdXltBQDwWFhQBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAMXFhQtKyg2NTE3NjI3NjI3
        NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI3
        NjI3NjI3NjI3NjI3NjI3NjI3NjI3NjI2NTEtKygXFhQEBAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAABAQEGBgUJCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgK
        CQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgKCQgJCQgGBgUBAQEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>